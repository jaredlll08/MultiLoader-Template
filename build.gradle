plugins {
    id 'java'
    id 'org.spongepowered.gradle.vanilla' version '0.2.+' apply false
    id 'net.minecraftforge.gradle' version '5.1.+' apply false
    id 'org.spongepowered.mixin' version '0.7.+' apply false
    id 'org.parchmentmc.librarian.forgegradle' version '1.+' apply false
    //id 'fabric-loom' version '1.1.+' apply false
    //id 'org.quiltmc.loom' version '1.1+' apply false
}

subprojects {
    apply plugin: 'java'

    group "${mod_domain}.${mod_author}.${mod_id}"
    version mod_version

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(java_version as int))
        //setSourceCompatibility(JavaVersion.toVersion(java_version as int))
        //setTargetCompatibility(JavaVersion.toVersion(java_version as int))
        withSourcesJar()
        withJavadocJar()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
        it.options.release.set(java_version as int)
    }

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_id}" }
        }

        manifest {
            attributes([
                    'Specification-Title'     : mod_id,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : "1", // We are version 1 of ourselves
                    'Implementation-Title'    : mod_name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'               : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }

        sourcesJar {
            from(rootProject.file("LICENSE")) {
                rename { "${it}_${mod_id}" }
            }
        }

        // Disables Gradle's custom module metadata from being published to maven. The
        // metadata includes mapped dependencies which are not reasonably consumable by
        // other mod developers.
        tasks.withType(GenerateModuleMetadata).configureEach {
            it.setEnabled(false)
        }
    }

    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven {
            name = 'Forge'
            url = 'https://maven.minecraftforge.net/' }
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        maven {
            name = 'Quilt'
            url = 'https://maven.quiltmc.org/repository/release'
        }
        maven {
            name = 'Sponge'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = 'Parchment'
            url = 'https://maven.parchmentmc.org'
        }
    }
}